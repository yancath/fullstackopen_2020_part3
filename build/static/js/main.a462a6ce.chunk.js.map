{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Persons.js","components/Filter.js","components/Notification.js","services/Persons.js","App.js","index.js"],"names":["Person","persons","delHandler","name","number","onClick","PersonForm","newName","newNumber","handleNumChange","handlePersonChange","addPerson","onSubmit","value","onChange","type","Persons","Filter","filter","handleFilterChange","Notification","message","flag","className","baseUrl","newObj","axios","post","then","response","data","id","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","notif","setNotif","setFlag","useEffect","get","showFilter","person","toLowerCase","includes","event","target","preventDefault","personObj","map","window","confirm","find","setTimeout","personsService","returnedPerson","catch","error","concat","console","log","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a462a6ce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = ( {persons, delHandler} ) => {\r\n    return (\r\n    <li>{persons.name} {persons.number} <button onClick={delHandler}>delete</button></li>\r\n    )\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\n\r\nconst PersonForm = ( {newName, newNumber, handleNumChange, handlePersonChange, addPerson} ) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handlePersonChange}/>\r\n        </div>\r\n        <div>number: <input value={newNumber} onChange={handleNumChange}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ( {persons} ) => {\r\n    return (\r\n         <ul>\r\n             {persons}\r\n         </ul>\r\n    )\r\n}\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst Filter = ( {filter, handleFilterChange} ) => {\r\n    const text = 'filter shown with'\r\n\r\n    return (\r\n        <div>\r\n          {text}<input value={filter} onChange={handleFilterChange}/>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst Notification = ( {message, flag} ) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n    \r\n    if (flag === false) {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"success\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = 'https://thawing-river-64170.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObj => {\r\n    const request = axios.post(baseUrl, newObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\";\n\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\nimport personsService from './services/Persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notif, setNotif ]  = useState(null)\n  const [ flag, setFlag ] = useState(null)\n\n  useEffect(() => {\n    axios.get('https://thawing-river-64170.herokuapp.com/api/persons').then(response => {\n      setPersons(response.data);\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    \n    const personObj = {\n      name: newName,\n      number: newNumber\n    }\n\n    const everyPerson = persons.map(person => person.name);\n\n    if (everyPerson.includes(newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n        const id = persons.find(person => person.name === newName).id\n\n        const newObj = {\n          name: newName,\n\t\t\t\t\tnumber: newNumber,\n        }\n\n        setNotif(`${newName} has been updated`)\n        setFlag(true)\n        setTimeout(() => {\n          setNotif(null)\n        }, 5000)\n\n        personsService\n        .update(id, newObj)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id === id ? returnedPerson : person))\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch(error => {\n          setNotif(`Information of ${newName} has already been removed from server`)\n          setFlag(false)\n          setTimeout(() => {\n            setNotif(null)\n          }, 5000)\n          \n          setPersons(persons.filter(person => person.id !== id)\n          )\n        })\n\n      }\n    } else {\n      setNotif(`Added ${newName}`)\n      setFlag(true)\n      setTimeout(() => {\n        setNotif(null)\n      }, 5000)\n      \n      personsService\n      .create(personObj)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('');\n        setNewNumber('');\n      })\n    }\n\n\n  }\n\n  const showFilter = filter === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const handlePersonChange = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  const handleNumChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const delHandler = (id) => {\n    const person = persons.find(person => person.id === id)\n    \n    if (window.confirm(`Delete ${person.name}?`) === true) {\n      setNotif(`Deleted ${person.name}`)\n      setFlag(true)\n\n      personsService\n      .remove(id)\n      .then(response => {\n          setPersons(persons.filter(person => person.id !== id))                \n      })\n    }\n  }\n\n  const displayNames = () => \n    showFilter.map(person => <Person key={person.id} persons={person} delHandler={() => delHandler(person.id)}/>)\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notif} flag={flag}/>\n      <Filter filter={filter} handleFilterChange={handleFilterChange} showFilter={showFilter}/>\n      <h3>add a new</h3>\n      <PersonForm \n      addPerson={addPerson}\n      newName={newName} \n      newNumber={newNumber} \n      handlePersonChange={handlePersonChange} \n      handleNumChange={handleNumChange} />\n      <h3>Numbers</h3>\n      <Persons persons={displayNames()} />\n    </div>\n\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}